const form = document.querySelector('#myForm');
const sendBtn = document.querySelector('.checkin');
const emails = ['ivanov@mail.ru', 'petrov@yandex.ru', 'zuev@inbox.ru'];
const emailError = document.querySelector('.email__error');

form.addEventListener('submit', e => {
  e.preventDefault();

  const password = form.elements.password;
  const email = form.elements.email;
  const agreement = form.elements.agreement;

  if(password.value === '') {
    addFormMessage(password, 'Поле не может быть пустым')
  } else if (password.value.length<4) {
    addFormMessage(password, 'Пароль должен быть не менее 4 символов');
  }

  if(email.value === '') {
    addFormMessage(email, 'Поле не может быть пустым')
  } else if(!validateEmail(email.value)) {
    addFormMessage(email, 'Не корректный почтовый адрес')
  } 

  for(var i=0; i<emails.length; i++ ){
    if(email.value === emails[i]) {
      emailError.style.display='flex';
    }
  }
  
  if(!agreement.checked) {
    addFormMessage(agreement, 'Требуется подтверждение')
  }
});

// при фокусе на инпут убираем класс ошибки
[...form.elements].forEach((input) => {
  input.addEventListener('focus', e => {
    let elem = e.currentTarget.parentElement;

    let messElem = elem.querySelector('.form__error');
    if(messElem) {
      elem.removeChild(messElem);
    }

    elem.classList.remove('form__row_error');
  });
  
  agreement.addEventListener('change', e => {
    let elem = e.currentTarget.parentElement;

    let messElem = elem.querySelector('.form__error');
    if(messElem) {
      elem.removeChild(messElem);
    }

    elem.classList.remove('form__row_error');
  });
});

// добавляем (создаем) блок-сообщение об ошибке
function addFormMessage(elem, message) {
  let parrent = elem.parentElement;

  let messageContainer = document.createElement('div');
  messageContainer.classList.add('form__error');
  messageContainer.innerHTML = message;
  parrent.appendChild(messageContainer);

  parrent.classList.add('form__row_error');
}

// валидация email
function validateEmail(email) {
  var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
  return re.test(email);
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvY3VzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoibWFpbi5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI215Rm9ybScpO1xyXG5jb25zdCBzZW5kQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNoZWNraW4nKTtcclxuY29uc3QgZW1haWxzID0gWydpdmFub3ZAbWFpbC5ydScsICdwZXRyb3ZAeWFuZGV4LnJ1JywgJ3p1ZXZAaW5ib3gucnUnXTtcclxuY29uc3QgZW1haWxFcnJvciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbWFpbF9fZXJyb3InKTtcclxuXHJcbmZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgZSA9PiB7XHJcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICBjb25zdCBwYXNzd29yZCA9IGZvcm0uZWxlbWVudHMucGFzc3dvcmQ7XHJcbiAgY29uc3QgZW1haWwgPSBmb3JtLmVsZW1lbnRzLmVtYWlsO1xyXG4gIGNvbnN0IGFncmVlbWVudCA9IGZvcm0uZWxlbWVudHMuYWdyZWVtZW50O1xyXG5cclxuICBpZihwYXNzd29yZC52YWx1ZSA9PT0gJycpIHtcclxuICAgIGFkZEZvcm1NZXNzYWdlKHBhc3N3b3JkLCAn0J/QvtC70LUg0L3QtSDQvNC+0LbQtdGCINCx0YvRgtGMINC/0YPRgdGC0YvQvCcpXHJcbiAgfSBlbHNlIGlmIChwYXNzd29yZC52YWx1ZS5sZW5ndGg8NCkge1xyXG4gICAgYWRkRm9ybU1lc3NhZ2UocGFzc3dvcmQsICfQn9Cw0YDQvtC70Ywg0LTQvtC70LbQtdC9INCx0YvRgtGMINC90LUg0LzQtdC90LXQtSA0INGB0LjQvNCy0L7Qu9C+0LInKTtcclxuICB9XHJcblxyXG4gIGlmKGVtYWlsLnZhbHVlID09PSAnJykge1xyXG4gICAgYWRkRm9ybU1lc3NhZ2UoZW1haWwsICfQn9C+0LvQtSDQvdC1INC80L7QttC10YIg0LHRi9GC0Ywg0L/Rg9GB0YLRi9C8JylcclxuICB9IGVsc2UgaWYoIXZhbGlkYXRlRW1haWwoZW1haWwudmFsdWUpKSB7XHJcbiAgICBhZGRGb3JtTWVzc2FnZShlbWFpbCwgJ9Cd0LUg0LrQvtGA0YDQtdC60YLQvdGL0Lkg0L/QvtGH0YLQvtCy0YvQuSDQsNC00YDQtdGBJylcclxuICB9IFxyXG5cclxuICBmb3IodmFyIGk9MDsgaTxlbWFpbHMubGVuZ3RoOyBpKysgKXtcclxuICAgIGlmKGVtYWlsLnZhbHVlID09PSBlbWFpbHNbaV0pIHtcclxuICAgICAgZW1haWxFcnJvci5zdHlsZS5kaXNwbGF5PSdmbGV4JztcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgaWYoIWFncmVlbWVudC5jaGVja2VkKSB7XHJcbiAgICBhZGRGb3JtTWVzc2FnZShhZ3JlZW1lbnQsICfQotGA0LXQsdGD0LXRgtGB0Y8g0L/QvtC00YLQstC10YDQttC00LXQvdC40LUnKVxyXG4gIH1cclxufSk7XHJcblxyXG4vLyDQv9GA0Lgg0YTQvtC60YPRgdC1INC90LAg0LjQvdC/0YPRgiDRg9Cx0LjRgNCw0LXQvCDQutC70LDRgdGBINC+0YjQuNCx0LrQuFxyXG5bLi4uZm9ybS5lbGVtZW50c10uZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdmb2N1cycsIGUgPT4ge1xyXG4gICAgbGV0IGVsZW0gPSBlLmN1cnJlbnRUYXJnZXQucGFyZW50RWxlbWVudDtcclxuXHJcbiAgICBsZXQgbWVzc0VsZW0gPSBlbGVtLnF1ZXJ5U2VsZWN0b3IoJy5mb3JtX19lcnJvcicpO1xyXG4gICAgaWYobWVzc0VsZW0pIHtcclxuICAgICAgZWxlbS5yZW1vdmVDaGlsZChtZXNzRWxlbSk7XHJcbiAgICB9XHJcblxyXG4gICAgZWxlbS5jbGFzc0xpc3QucmVtb3ZlKCdmb3JtX19yb3dfZXJyb3InKTtcclxuICB9KTtcclxuICBcclxuICBhZ3JlZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgZSA9PiB7XHJcbiAgICBsZXQgZWxlbSA9IGUuY3VycmVudFRhcmdldC5wYXJlbnRFbGVtZW50O1xyXG5cclxuICAgIGxldCBtZXNzRWxlbSA9IGVsZW0ucXVlcnlTZWxlY3RvcignLmZvcm1fX2Vycm9yJyk7XHJcbiAgICBpZihtZXNzRWxlbSkge1xyXG4gICAgICBlbGVtLnJlbW92ZUNoaWxkKG1lc3NFbGVtKTtcclxuICAgIH1cclxuXHJcbiAgICBlbGVtLmNsYXNzTGlzdC5yZW1vdmUoJ2Zvcm1fX3Jvd19lcnJvcicpO1xyXG4gIH0pO1xyXG59KTtcclxuXHJcbi8vINC00L7QsdCw0LLQu9GP0LXQvCAo0YHQvtC30LTQsNC10LwpINCx0LvQvtC6LdGB0L7QvtCx0YnQtdC90LjQtSDQvtCxINC+0YjQuNCx0LrQtVxyXG5mdW5jdGlvbiBhZGRGb3JtTWVzc2FnZShlbGVtLCBtZXNzYWdlKSB7XHJcbiAgbGV0IHBhcnJlbnQgPSBlbGVtLnBhcmVudEVsZW1lbnQ7XHJcblxyXG4gIGxldCBtZXNzYWdlQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgbWVzc2FnZUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdmb3JtX19lcnJvcicpO1xyXG4gIG1lc3NhZ2VDb250YWluZXIuaW5uZXJIVE1MID0gbWVzc2FnZTtcclxuICBwYXJyZW50LmFwcGVuZENoaWxkKG1lc3NhZ2VDb250YWluZXIpO1xyXG5cclxuICBwYXJyZW50LmNsYXNzTGlzdC5hZGQoJ2Zvcm1fX3Jvd19lcnJvcicpO1xyXG59XHJcblxyXG4vLyDQstCw0LvQuNC00LDRhtC40Y8gZW1haWxcclxuZnVuY3Rpb24gdmFsaWRhdGVFbWFpbChlbWFpbCkge1xyXG4gIHZhciByZSA9IC9eKChbXjw+KClbXFxdXFxcXC4sOzpcXHNAXFxcIl0rKFxcLltePD4oKVtcXF1cXFxcLiw7Olxcc0BcXFwiXSspKil8KFxcXCIuK1xcXCIpKUAoKFxcW1swLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcLlswLTldezEsM31cXF0pfCgoW2EtekEtWlxcLTAtOV0rXFwuKStbYS16QS1aXXsyLH0pKSQvO1xyXG4gIHJldHVybiByZS50ZXN0KGVtYWlsKTtcclxufSJdfQ==
